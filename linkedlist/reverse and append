#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
};
struct node * create()
{
	return NULL;
}
void insert(struct node **head,int data)
{
	struct node *newnode=(struct node*)malloc(sizeof(struct node));
	struct node *temp,*p;
	newnode->next=NULL;
	newnode->data=data;	
	if(*head==NULL)
	{
		*head=newnode;
		return;
	}
	temp=*head;
	while(temp!=NULL)
	{
		p=temp;
		temp=temp->next;
	}
	p->next=newnode;	
}
void reverse(struct node **head)
{
	struct node *temp,*temp1;
	temp=temp1=NULL;
	while(*head!=NULL)
	{
		temp1=(*head)->next;
		(*head)->next=temp;
		temp=*head;
		*head=temp1;
	}
	*head=temp;
}
void print(struct node *head)
{
	struct node *temp;
	temp=head;
	while(temp!=NULL)
	{
		printf("\n%d",temp->data);
		temp=temp->next;	
	}
}
void append(struct node **head1,struct node **head2)
{
	struct node *temp,*p;
	temp=*head1;
	while(temp!=NULL&&temp->next!=NULL)
	{
		insert(head2,temp->next->data);
        temp->next=temp->next->next;
        temp=temp->next;
	}
	reverse(head2);
	temp=*head1;
	while(temp!=NULL)
	{
		p=temp;
		temp=temp->next;
	}
	p->next=*head2;
}
int main()
{
	struct node *head1=create();
	struct node *head2=create();
	insert(&head1,1);
	insert(&head1,2);
	insert(&head1,3);
	insert(&head1,4);
	insert(&head1,5);
	insert(&head1,6);
	print(head1);
	append(&head1,&head2);
	printf("\nafter reversing and appending");
	print(head1);
	return 0;
}