#include<stdio.h>
#include<stdlib.h>
struct graph{
	int v;
	int e;
	int a[10][10];
};
struct graph* adjmatrix(int v,int e)
{
	struct graph *g=(struct graph*)malloc(sizeof(struct graph));
	g->v=v;
	g->e=e;
	int i,u,t;
	//g->a=(int**)malloc(sizeof(g->v*g->v));
	
	for(u=0;u<g->v;u++)
	for(t=0;t<g->v;t++)
	g->a[u][t]=0;
	for( i=0;i<g->e;i++)
	{
		printf("enter edges");
		scanf("%d %d",&u,&t);
		g->a[u][t]=1;
		g->a[t][u]=1;
	}
	return g;
}
void dfs(struct graph *g,int i,int *visited)
{
visited[i]=1;
printf("\n%d",i);
for(int v=0;v<g->v;v++)
{
	if(!visited[v]&&g->a[i][v])
	dfs(g,v,visited);
	}	
}
void dfstraversal(struct graph *g)
{
	int visited[g->v];
	for(int i=0;i<g->v;i++)
	visited[i]=0;
	dfs(g,0,visited);
}
int main()
{
	struct graph *g=adjmatrix(8,6);
	dfstraversal(g);
	return 0;
}