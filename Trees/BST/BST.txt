#include<stdio.h>
#include<stdlib.h>
#include<limits.h>
struct treenode{
	int data;
	struct treenode *left,*right;
};
struct treenode* node(int data)
{
	struct treenode *node=(struct treenode*)malloc(sizeof(struct treenode));
	node->data=data;
	node->right=node->left=NULL;
	return node;
}
int BST(struct treenode*root,int min,int max)
{
	if(root==NULL)
	return 1;
	return (root->data>min&&root->data<max&&BST(root->left,min,root->data)&&BST(root->right,root->data,max));	
}
int main()
{
	struct treenode *root,*t,*r;
	root=node(4);
	root->right=node(6);
	root->left=node(2);
	t=root->right;
	r=root->left;
	t->right=node(7);
	t->left=node(5);
	r->right=node(3);
	r->left=node(1);
	if(BST(root,INT_MIN,INT_MAX))
	printf("bst");
	else
	printf("not a bst");
	return 0;
}
