#include<stdio.h>
#include<stdlib.h>
struct treenode{
	int data;
	struct treenode *right,*left;
};
struct treenode* createtree()
{
	return NULL;
}
struct treenode* node(int data)
{
	struct treenode *node=(struct treenode*)malloc(sizeof(struct treenode));
	node->data=data;
	node->right=node->left=NULL;
	return node;
}
int identicaltrees(struct treenode *root1,struct treenode *root2)
{
    if(root1==NULL&&root2==NULL)
    return 1;
    if((root1==NULL&&root2!=NULL)||(root1!=NULL&&root2==NULL))
    return 0;
    return (root1->data==root2->data&&identicaltrees(root1->left,root2->left)&&identicaltrees(root1->right,root2->right));
}
int main()
{
	struct treenode *root1,*root2,*t,*r;
	root1=root2=createtree();
	//root1 initialization
	root1=node(1);
	root1->left=node(2);
	root1->right=node(3);
	t=root1->left;
	t->right=node(4);
	t->left=node(5);
	t->right->right=node(6);
	//root2 initialization
	root2=node(1);
	root2->left=node(2);
	root2->right=node(3);
	r=root2->left;
	r->right=node(4);
	r->left=node(5);
	r->right->right=node(3);
	if(identicaltrees(root1,root2)==1)
	printf("identical");
	else
	printf("not identical");
	return 0;
}
